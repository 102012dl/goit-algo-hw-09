\Завдання 1 

def find_coins_greedy(amount):
    """
    Функція, яка використовує жадібний алгоритм для видачі решти.
    Параметри:
    amount (int): Сума, яку потрібно видати покупцеві.
    Повертає:
    dict: Словник з кількістю монет кожного номіналу, що використовуються для формування суми.
    """
    # Номінали монет, упорядковані за спаданням
    coins = [50, 25, 10, 5, 2, 1]
    result = {}
    for coin in coins:
        num_coins = amount // coin  # Визначаємо кількість монет цього номіналу
        if num_coins > 0:
            result[coin] = num_coins  # Додаємо до результату
            amount -= num_coins * coin  # Зменшуємо суму на відповідну кількість монет
    return result
if __name__ == "__main__":
    # Приклад використання функції
    amount = 113
    change = find_coins_greedy(amount)
    print(change)  # Очікуваний результат: {50: 2, 10: 1, 2: 1, 1: 1}




\Завдання 2 

def find_min_coins(amount):
    """
    Функція, яка знаходить мінімальну кількість монет для заданої суми
    за допомогою методу динамічного програмування.
    Параметри:
    amount (int): Сума, яку потрібно видати покупцеві.
    Повертає:
    dict: Словник з кількістю монет кожного номіналу, що використовуються для формування суми.
    """
    coins = [50, 25, 10, 5, 2, 1]
    # Ініціалізація масиву для зберігання мінімальної кількості монет для кожної суми
    dp = [float('inf')] * (amount + 1)
    dp[0] = 0  # Для суми 0 потрібно 0 монет
    # Масив для зберігання останнього використаного номіналу монети для кожної суми
    last_coin = [-1] * (amount + 1)
    # Заповнюємо масив dp
    for i in range(1, amount + 1):
        for coin in coins:
            if i >= coin and dp[i - coin] + 1 < dp[i]:
                dp[i] = dp[i - coin] + 1
                last_coin[i] = coin
    # Відновлюємо набір монет для досягнення заданої суми
    result = {}
    while amount > 0:
        coin = last_coin[amount]
        if coin in result:
            result[coin] += 1
        else:
            result[coin] = 1
        amount -= coin
    return result
if __name__ == "__main__":
    # Приклад використання функції
    amount = 113
    change = find_min_coins(amount)
    print(change)  # Очікуваний результат: {50: 2, 10: 1, 2: 1, 1: 1} 

